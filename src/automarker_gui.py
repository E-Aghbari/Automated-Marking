#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Apr 29, 2025 12:16:02 AM BST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import automarker_gui_support

_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: automarker_gui_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'default.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('default')
    style.configure('.', font = "TkDefaultFont")
    if sys.platform == "win32":
       style.theme_use('winnative')    
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("747x727+871+395")
        top.minsize(120, 1)
        top.maxsize(5124, 1678)
        top.resizable(1,  1)
        top.title("Auto Marker")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top
        self.vEntry = tk.StringVar()
        self.vEntry4 = tk.StringVar()
        self.vEntry3 = tk.StringVar()
        self.vEntry2 = tk.StringVar()
        self.che41 = tk.IntVar()
        self.che42 = tk.IntVar()
        self.che40 = tk.IntVar()
        self.che39 = tk.IntVar()

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.btnExit = tk.Button(self.top)
        self.btnExit.place(relx=0.415, rely=0.944, height=26, width=77)
        self.btnExit.configure(activebackground="#d9d9d9")
        self.btnExit.configure(activeforeground="black")
        self.btnExit.configure(background="#d9d9d9")
        self.btnExit.configure(disabledforeground="#a3a3a3")
        self.btnExit.configure(font="-family {Segoe UI} -size 9")
        self.btnExit.configure(foreground="#000000")
        self.btnExit.configure(highlightbackground="#d9d9d9")
        self.btnExit.configure(highlightcolor="#000000")
        self.btnExit.configure(text='''Exit''')
        self.btnExit.bind('<Button-1>',lambda e:automarker_gui_support.btnExit_lclick(e))

        self.Button1 = tk.Button(self.top)
        self.Button1.place(relx=0.08, rely=0.944, height=26, width=57)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="black")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(command=automarker_gui_support.btn_Help)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font="-family {Segoe UI} -size 9")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="#000000")
        self.Button1.configure(text='''Help''')

        self.Label5 = tk.Label(self.top)
        self.Label5.place(relx=0.027, rely=0.011, height=23, width=141)
        self.Label5.configure(activebackground="#d9d9d9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(compound='left')
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Label5.configure(foreground="black")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="#000000")
        self.Label5.configure(text='''BEFORE YOU START:''')

        self.Label9 = tk.Label(self.top)
        self.Label9.place(relx=0.027, rely=0.128, height=21, width=694)
        self.Label9.configure(activebackground="#d9d9d9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(anchor='w')
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(compound='left')
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(font="-family {Segoe UI} -size 10")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="#000000")
        self.Label9.configure(text='''- Create an empty folder that is going to contain the cleaned submissions.''')

        self.frameTop = tk.LabelFrame(self.top)
        self.frameTop.place(relx=0.028, rely=0.169, relheight=0.257
                , relwidth=0.949)
        self.frameTop.configure(relief='groove')
        self.frameTop.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.frameTop.configure(foreground="#000000")
        self.frameTop.configure(text='''Non-Cleaned Submissions''')
        self.frameTop.configure(background="#d9d9d9")
        self.frameTop.configure(highlightbackground="#d9d9d9")
        self.frameTop.configure(highlightcolor="#000000")

        self.btnTestFiles = tk.Button(self.frameTop)
        self.btnTestFiles.place(relx=0.027, rely=0.364, height=26, width=87
                , bordermode='ignore')
        self.btnTestFiles.configure(activebackground="#d9d9d9")
        self.btnTestFiles.configure(activeforeground="black")
        self.btnTestFiles.configure(background="#d9d9d9")
        self.btnTestFiles.configure(command=automarker_gui_support.btn_GetTestFiles)
        self.btnTestFiles.configure(disabledforeground="#a3a3a3")
        self.btnTestFiles.configure(font="-family {Segoe UI} -size 9")
        self.btnTestFiles.configure(foreground="#000000")
        self.btnTestFiles.configure(highlightbackground="#d9d9d9")
        self.btnTestFiles.configure(highlightcolor="#000000")
        self.btnTestFiles.configure(text='''Select Folder''')

        self.btnGetnonClean = tk.Button(self.frameTop)
        self.btnGetnonClean.place(relx=0.027, rely=0.77, height=26, width=87
                , bordermode='ignore')
        self.btnGetnonClean.configure(activebackground="#d9d9d9")
        self.btnGetnonClean.configure(activeforeground="black")
        self.btnGetnonClean.configure(background="#d9d9d9")
        self.btnGetnonClean.configure(command=automarker_gui_support.btn_GetNonClean)
        self.btnGetnonClean.configure(disabledforeground="#a3a3a3")
        self.btnGetnonClean.configure(font="-family {Segoe UI} -size 9")
        self.btnGetnonClean.configure(foreground="#000000")
        self.btnGetnonClean.configure(highlightbackground="#d9d9d9")
        self.btnGetnonClean.configure(highlightcolor="#000000")
        self.btnGetnonClean.configure(text='''Select Folder''')

        self.Entry1 = tk.Entry(self.frameTop)
        self.Entry1.place(relx=0.164, rely=0.781, height=20, relwidth=0.556
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="-family {Courier New} -size 10")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="#000000")
        self.Entry1.configure(insertbackground="#000000")
        self.Entry1.configure(selectbackground="#d9d9d9")
        self.Entry1.configure(selectforeground="black")
        self.Entry1.configure(textvariable=self.vEntry)

        self.Label4 = tk.Label(self.frameTop)
        self.Label4.place(relx=0.016, rely=0.583, height=33, width=694
                , bordermode='ignore')
        self.Label4.configure(activebackground="#d9d9d9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Segoe UI} -size 10")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="#000000")
        self.Label4.configure(text='''Choose the folder containing the non-cleaned submissions.''')

        self.nonCleanbtn = tk.Button(self.frameTop)
        self.nonCleanbtn.place(relx=0.763, rely=0.77, height=26, width=117
                , bordermode='ignore')
        self.nonCleanbtn.configure(activebackground="#d9d9d9")
        self.nonCleanbtn.configure(activeforeground="black")
        self.nonCleanbtn.configure(background="#d9d9d9")
        self.nonCleanbtn.configure(command=automarker_gui_support.btn_Clean)
        self.nonCleanbtn.configure(disabledforeground="#a3a3a3")
        self.nonCleanbtn.configure(font="-family {Segoe UI} -size 9")
        self.nonCleanbtn.configure(foreground="#000000")
        self.nonCleanbtn.configure(highlightbackground="#d9d9d9")
        self.nonCleanbtn.configure(highlightcolor="#000000")
        self.nonCleanbtn.configure(text='''Clean Submissions''')

        self.Entry4 = tk.Entry(self.frameTop)
        self.Entry4.place(relx=0.164, rely=0.38, height=20, relwidth=0.556
                , bordermode='ignore')
        self.Entry4.configure(background="white")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="-family {Courier New} -size 10")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(highlightbackground="#d9d9d9")
        self.Entry4.configure(highlightcolor="#000000")
        self.Entry4.configure(insertbackground="#000000")
        self.Entry4.configure(selectbackground="#d9d9d9")
        self.Entry4.configure(selectforeground="black")
        self.Entry4.configure(textvariable=self.vEntry4)

        self.Label7 = tk.Label(self.frameTop)
        self.Label7.place(relx=0.016, rely=0.214, height=20, width=685
                , bordermode='ignore')
        self.Label7.configure(activebackground="#d9d9d9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(anchor='w')
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(compound='left')
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font="-family {Segoe UI} -size 10")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="#000000")
        self.Label7.configure(text='''Choose the empty folder that will contain the cleaned submissions.''')

        self.Label6 = tk.Label(self.top)
        self.Label6.place(relx=0.027, rely=0.051, height=40, width=695)
        self.Label6.configure(activebackground="#d9d9d9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(compound='left')
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font="-family {Segoe UI} -size 10")
        self.Label6.configure(foreground="black")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="#000000")
        self.Label6.configure(justify='left')
        self.Label6.configure(text='''- For best performance, place all your working files and folders on the same drive (e.g., C:/, D:/, or E:/). 
Accessing files across multiple drives may slow down the program due to increased I/O overhead.''')

        self.frameBottom = tk.LabelFrame(self.top)
        self.frameBottom.place(relx=0.027, rely=0.428, relheight=0.501
                , relwidth=0.952)
        self.frameBottom.configure(relief='groove')
        self.frameBottom.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.frameBottom.configure(foreground="#000000")
        self.frameBottom.configure(text='''Cleaned Submissions''')
        self.frameBottom.configure(background="#d9d9d9")
        self.frameBottom.configure(highlightbackground="#d9d9d9")
        self.frameBottom.configure(highlightcolor="#000000")

        self.frameBtmRight = tk.LabelFrame(self.frameBottom)
        self.frameBtmRight.place(relx=0.017, rely=0.712, relheight=0.25
                , relwidth=0.44, bordermode='ignore')
        self.frameBtmRight.configure(relief='groove')
        self.frameBtmRight.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.frameBtmRight.configure(foreground="#000000")
        self.frameBtmRight.configure(text='''Run Tests''')
        self.frameBtmRight.configure(background="#d9d9d9")
        self.frameBtmRight.configure(highlightbackground="#d9d9d9")
        self.frameBtmRight.configure(highlightcolor="#000000")

        self.CheckTask3 = tk.Checkbutton(self.frameBtmRight)
        self.CheckTask3.place(relx=0.042, rely=0.615, relheight=0.264
                , relwidth=0.224, bordermode='ignore')
        self.CheckTask3.configure(activebackground="#d9d9d9")
        self.CheckTask3.configure(activeforeground="black")
        self.CheckTask3.configure(anchor='w')
        self.CheckTask3.configure(background="#d9d9d9")
        self.CheckTask3.configure(compound='left')
        self.CheckTask3.configure(disabledforeground="#a3a3a3")
        self.CheckTask3.configure(font="-family {Segoe UI} -size 9")
        self.CheckTask3.configure(foreground="#000000")
        self.CheckTask3.configure(highlightbackground="#d9d9d9")
        self.CheckTask3.configure(highlightcolor="#000000")
        self.CheckTask3.configure(justify='left')
        self.CheckTask3.configure(text='''Task 3''')
        self.CheckTask3.configure(variable=self.che41)

        self.CheckTask4 = tk.Checkbutton(self.frameBtmRight)
        self.CheckTask4.place(relx=0.3, rely=0.615, relheight=0.264
                , relwidth=0.22, bordermode='ignore')
        self.CheckTask4.configure(activebackground="#d9d9d9")
        self.CheckTask4.configure(activeforeground="black")
        self.CheckTask4.configure(anchor='w')
        self.CheckTask4.configure(background="#d9d9d9")
        self.CheckTask4.configure(compound='left')
        self.CheckTask4.configure(disabledforeground="#a3a3a3")
        self.CheckTask4.configure(font="-family {Segoe UI} -size 9")
        self.CheckTask4.configure(foreground="#000000")
        self.CheckTask4.configure(highlightbackground="#d9d9d9")
        self.CheckTask4.configure(highlightcolor="#000000")
        self.CheckTask4.configure(justify='left')
        self.CheckTask4.configure(text='''Task 4''')
        self.CheckTask4.configure(variable=self.che42)

        self.CheckTask2 = tk.Checkbutton(self.frameBtmRight)
        self.CheckTask2.place(relx=0.3, rely=0.242, relheight=0.264
                , relwidth=0.224, bordermode='ignore')
        self.CheckTask2.configure(activebackground="#d9d9d9")
        self.CheckTask2.configure(activeforeground="black")
        self.CheckTask2.configure(anchor='w')
        self.CheckTask2.configure(background="#d9d9d9")
        self.CheckTask2.configure(compound='left')
        self.CheckTask2.configure(disabledforeground="#a3a3a3")
        self.CheckTask2.configure(font="-family {Segoe UI} -size 9")
        self.CheckTask2.configure(foreground="#000000")
        self.CheckTask2.configure(highlightbackground="#d9d9d9")
        self.CheckTask2.configure(highlightcolor="#000000")
        self.CheckTask2.configure(justify='left')
        self.CheckTask2.configure(text='''Task 2''')
        self.CheckTask2.configure(variable=self.che40)

        self.CheckTask1 = tk.Checkbutton(self.frameBtmRight)
        self.CheckTask1.place(relx=0.042, rely=0.242, relheight=0.264
                , relwidth=0.224, bordermode='ignore')
        self.CheckTask1.configure(activebackground="#d9d9d9")
        self.CheckTask1.configure(activeforeground="black")
        self.CheckTask1.configure(anchor='w')
        self.CheckTask1.configure(background="#d9d9d9")
        self.CheckTask1.configure(command=automarker_gui_support.btn_Checkboxes)
        self.CheckTask1.configure(compound='left')
        self.CheckTask1.configure(disabledforeground="#a3a3a3")
        self.CheckTask1.configure(font="-family {Segoe UI} -size 9")
        self.CheckTask1.configure(foreground="#000000")
        self.CheckTask1.configure(highlightbackground="#d9d9d9")
        self.CheckTask1.configure(highlightcolor="#000000")
        self.CheckTask1.configure(justify='left')
        self.CheckTask1.configure(text='''Task 1''')
        self.CheckTask1.configure(variable=self.che39)

        self.btnRunTest = tk.Button(self.frameBtmRight)
        self.btnRunTest.place(relx=0.607, rely=0.407, height=26, width=77
                , bordermode='ignore')
        self.btnRunTest.configure(activebackground="#d9d9d9")
        self.btnRunTest.configure(activeforeground="black")
        self.btnRunTest.configure(background="#d9d9d9")
        self.btnRunTest.configure(disabledforeground="#a3a3a3")
        self.btnRunTest.configure(font="-family {Segoe UI} -size 9")
        self.btnRunTest.configure(foreground="#000000")
        self.btnRunTest.configure(highlightbackground="#d9d9d9")
        self.btnRunTest.configure(highlightcolor="#000000")
        self.btnRunTest.configure(text='''Run Tests''')
        self.btnRunTest.bind('<Button-1>',lambda e:automarker_gui_support.btnRunTest_lclick(e))

        self.Label3 = tk.Label(self.frameBottom)
        self.Label3.place(relx=0.464, rely=0.701, height=59, width=365
                , bordermode='ignore')
        self.Label3.configure(activebackground="#d9d9d9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Segoe UI} -size 10")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="#000000")
        self.Label3.configure(justify='left')
        self.Label3.configure(text='''Note: Tests will run on the same folder 
containing Original_Submissions, Task1_override, 
Task1_2_Override''')

        self.frameBtmLeft = tk.LabelFrame(self.frameBottom)
        self.frameBtmLeft.place(relx=0.017, rely=0.063, relheight=0.632
                , relwidth=0.965, bordermode='ignore')
        self.frameBtmLeft.configure(relief='groove')
        self.frameBtmLeft.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.frameBtmLeft.configure(foreground="#000000")
        self.frameBtmLeft.configure(text='''Prepare Submissions''')
        self.frameBtmLeft.configure(background="#d9d9d9")
        self.frameBtmLeft.configure(highlightbackground="#d9d9d9")
        self.frameBtmLeft.configure(highlightcolor="#000000")

        self.Entry3 = tk.Entry(self.frameBtmLeft)
        self.Entry3.place(relx=0.157, rely=0.848, height=20, relwidth=0.574
                , bordermode='ignore')
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="-family {Courier New} -size 10")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="#000000")
        self.Entry3.configure(insertbackground="#000000")
        self.Entry3.configure(selectbackground="#d9d9d9")
        self.Entry3.configure(selectforeground="black")
        self.Entry3.configure(textvariable=self.vEntry3)

        self.btnCopyOverride = tk.Button(self.frameBtmLeft)
        self.btnCopyOverride.place(relx=0.776, rely=0.83, height=26, width=117
                , bordermode='ignore')
        self.btnCopyOverride.configure(activebackground="#d9d9d9")
        self.btnCopyOverride.configure(activeforeground="black")
        self.btnCopyOverride.configure(background="#d9d9d9")
        self.btnCopyOverride.configure(command=automarker_gui_support.btn_CopyOverride)
        self.btnCopyOverride.configure(disabledforeground="#a3a3a3")
        self.btnCopyOverride.configure(font="-family {Segoe UI} -size 9")
        self.btnCopyOverride.configure(foreground="#000000")
        self.btnCopyOverride.configure(highlightbackground="#d9d9d9")
        self.btnCopyOverride.configure(highlightcolor="#000000")
        self.btnCopyOverride.configure(text='''Copy and Override''')

        self.btnGetCopyOverride = tk.Button(self.frameBtmLeft)
        self.btnGetCopyOverride.place(relx=0.016, rely=0.83, height=26, width=87
                , bordermode='ignore')
        self.btnGetCopyOverride.configure(activebackground="#d9d9d9")
        self.btnGetCopyOverride.configure(activeforeground="black")
        self.btnGetCopyOverride.configure(background="#d9d9d9")
        self.btnGetCopyOverride.configure(command=automarker_gui_support.btn_GetTestPath)
        self.btnGetCopyOverride.configure(disabledforeground="#a3a3a3")
        self.btnGetCopyOverride.configure(font="-family {Segoe UI} -size 9")
        self.btnGetCopyOverride.configure(foreground="#000000")
        self.btnGetCopyOverride.configure(highlightbackground="#d9d9d9")
        self.btnGetCopyOverride.configure(highlightcolor="#000000")
        self.btnGetCopyOverride.configure(text='''Select Folder''')

        self.Label1 = tk.Label(self.frameBtmLeft)
        self.Label1.place(relx=0.016, rely=0.678, height=22, width=670
                , bordermode='ignore')
        self.Label1.configure(activebackground="#d9d9d9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Segoe UI} -size 10")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="#000000")
        self.Label1.configure(text='''Choose the folder containing the template Task_*.py and Testing_*.py files (e.g., TemplatePythonModel)''')

        self.Entry2 = tk.Entry(self.frameBtmLeft)
        self.Entry2.place(relx=0.157, rely=0.461, height=20, relwidth=0.574
                , bordermode='ignore')
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="-family {Courier New} -size 10")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="#000000")
        self.Entry2.configure(insertbackground="#000000")
        self.Entry2.configure(selectbackground="#d9d9d9")
        self.Entry2.configure(selectforeground="black")
        self.Entry2.configure(textvariable=self.vEntry2)

        self.btnGetVenv = tk.Button(self.frameBtmLeft)
        self.btnGetVenv.place(relx=0.016, rely=0.439, height=26, width=87
                , bordermode='ignore')
        self.btnGetVenv.configure(activebackground="#d9d9d9")
        self.btnGetVenv.configure(activeforeground="black")
        self.btnGetVenv.configure(background="#d9d9d9")
        self.btnGetVenv.configure(command=automarker_gui_support.btn_GetCleanPath)
        self.btnGetVenv.configure(disabledforeground="#a3a3a3")
        self.btnGetVenv.configure(font="-family {Segoe UI} -size 9")
        self.btnGetVenv.configure(foreground="#000000")
        self.btnGetVenv.configure(highlightbackground="#d9d9d9")
        self.btnGetVenv.configure(highlightcolor="#000000")
        self.btnGetVenv.configure(text='''Select Folder''')

        self.btnSetVenv = tk.Button(self.frameBtmLeft)
        self.btnSetVenv.place(relx=0.776, rely=0.448, height=26, width=117
                , bordermode='ignore')
        self.btnSetVenv.configure(activebackground="#d9d9d9")
        self.btnSetVenv.configure(activeforeground="black")
        self.btnSetVenv.configure(background="#d9d9d9")
        self.btnSetVenv.configure(command=automarker_gui_support.btn_SetupVenv)
        self.btnSetVenv.configure(disabledforeground="#a3a3a3")
        self.btnSetVenv.configure(font="-family {Segoe UI} -size 9")
        self.btnSetVenv.configure(foreground="#000000")
        self.btnSetVenv.configure(highlightbackground="#d9d9d9")
        self.btnSetVenv.configure(highlightcolor="#000000")
        self.btnSetVenv.configure(text='''Setup Virtual Envs''')

        self.Label2 = tk.Label(self.frameBtmLeft)
        self.Label2.place(relx=0.016, rely=0.304, height=22, width=669
                , bordermode='ignore')
        self.Label2.configure(activebackground="#d9d9d9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Segoe UI} -size 10")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="#000000")
        self.Label2.configure(text='''Choose the folder containing the cleaned submissions.''')

        self.Label11 = tk.Label(self.frameBtmLeft)
        self.Label11.place(relx=0.19, rely=0.13, height=21, width=413
                , bordermode='ignore')
        self.Label11.configure(activebackground="#d9d9d9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(anchor='w')
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(compound='left')
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="#000000")
        self.Label11.configure(text='''IMPORTANT: Setup the venvs first before copying and overriding.''')

        _style_code()
        self.TSeparator1 = ttk.Separator(self.frameBottom)
        self.TSeparator1.place(relx=0.543, rely=0.868, relwidth=0.28
                , bordermode='ignore')

        self.Label13 = tk.Label(self.frameBottom)
        self.Label13.place(relx=0.464, rely=0.879, height=31, width=374
                , bordermode='ignore')
        self.Label13.configure(activebackground="#d9d9d9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(anchor='w')
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(compound='left')
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(font="-family {Segoe UI} -size 10")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="#000000")
        self.Label13.configure(justify='left')
        self.Label13.configure(text='''REMINDER: Dont forget to move Images, Testing files and 
CSV files''')

class Toplevel2:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("722x573+1346+515")
        top.minsize(120, 1)
        top.maxsize(5124, 1678)
        top.resizable(1,  1)
        top.title("Help")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top

        self.closebtn = tk.Button(self.top)
        self.closebtn.place(relx=0.443, rely=0.925, height=26, width=57)
        self.closebtn.configure(activebackground="#d9d9d9")
        self.closebtn.configure(activeforeground="black")
        self.closebtn.configure(background="#d9d9d9")
        self.closebtn.configure(command=automarker_gui_support.btn_Close)
        self.closebtn.configure(disabledforeground="#a3a3a3")
        self.closebtn.configure(font="-family {Segoe UI} -size 9")
        self.closebtn.configure(foreground="#000000")
        self.closebtn.configure(highlightbackground="#d9d9d9")
        self.closebtn.configure(highlightcolor="#000000")
        self.closebtn.configure(text='''Close''')

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(relx=0.015, rely=0.023, relheight=0.894
                , relwidth=0.972)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="#000000")

        self.Label5_1 = tk.Label(self.Frame1)
        self.Label5_1.place(relx=0.014, rely=0.02, height=19, width=173)
        self.Label5_1.configure(activebackground="#d9d9d9")
        self.Label5_1.configure(activeforeground="black")
        self.Label5_1.configure(anchor='w')
        self.Label5_1.configure(background="#d9d9d9")
        self.Label5_1.configure(compound='left')
        self.Label5_1.configure(disabledforeground="#a3a3a3")
        self.Label5_1.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label5_1.configure(foreground="black")
        self.Label5_1.configure(highlightbackground="#d9d9d9")
        self.Label5_1.configure(highlightcolor="#000000")
        self.Label5_1.configure(text='''Non-Cleaned Submissions:''')

        self.Label8 = tk.Label(self.Frame1)
        self.Label8.place(relx=0.014, rely=0.078, height=51, width=665)
        self.Label8.configure(activebackground="#d9d9d9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(anchor='w')
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(compound='left')
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(font="-family {Segoe UI} -size 10")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="#000000")
        self.Label8.configure(justify='left')
        self.Label8.configure(text='''First, create empty folder that is going to contain the submissios after being cleaned and then 
select that folder in the first entry.''')

        self.Label6_1 = tk.Label(self.Frame1)
        self.Label6_1.place(relx=0.014, rely=0.184, height=140, width=675)
        self.Label6_1.configure(activebackground="#d9d9d9")
        self.Label6_1.configure(activeforeground="black")
        self.Label6_1.configure(anchor='w')
        self.Label6_1.configure(background="#d9d9d9")
        self.Label6_1.configure(compound='left')
        self.Label6_1.configure(disabledforeground="#a3a3a3")
        self.Label6_1.configure(font="-family {Segoe UI} -size 10")
        self.Label6_1.configure(foreground="black")
        self.Label6_1.configure(highlightbackground="#d9d9d9")
        self.Label6_1.configure(highlightcolor="#000000")
        self.Label6_1.configure(justify='left')
        self.Label6_1.configure(text='''Clean Submissions: Select the folder containing the zipped student submissions. The program will:

- Unzip each submission
- Rename folders based on student IDs
- Flatten unnecessary nested directories
- Remove irrelevant files

When completed, a message box will notify you and display the location of the cleaned submissions.''')

        _style_code()
        self.TSeparator3 = ttk.Separator(self.Frame1)
        self.TSeparator3.place(relx=0.068, rely=0.469,  relwidth=0.856)

        self.Label5_1_1 = tk.Label(self.Frame1)
        self.Label5_1_1.place(relx=0.014, rely=0.482, height=25, width=144)
        self.Label5_1_1.configure(activebackground="#d9d9d9")
        self.Label5_1_1.configure(activeforeground="black")
        self.Label5_1_1.configure(anchor='w')
        self.Label5_1_1.configure(background="#d9d9d9")
        self.Label5_1_1.configure(compound='left')
        self.Label5_1_1.configure(disabledforeground="#a3a3a3")
        self.Label5_1_1.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label5_1_1.configure(foreground="black")
        self.Label5_1_1.configure(highlightbackground="#d9d9d9")
        self.Label5_1_1.configure(highlightcolor="#000000")
        self.Label5_1_1.configure(text='''Cleaned Submissions:''')

        self.Label10 = tk.Label(self.Frame1)
        self.Label10.place(relx=0.014, rely=0.527, height=146, width=679)
        self.Label10.configure(activebackground="#d9d9d9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(anchor='w')
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(compound='left')
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(font="-family {Segoe UI} -size 10")
        self.Label10.configure(foreground="black")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="#000000")
        self.Label10.configure(justify='left')
        self.Label10.configure(text='''1. Setup Virtual Environments: After cleaning the submissions (unzipping, renaming, etc.), 
select the folder containing the cleaned submissions.

⚠️ This operation may take some time. Please monitor the shell (terminal/CMD) from which the GUI 
was launched for progress updates.

2. Copy Submissions and Override Files: Once virtual environments are ready, select the folder containing the tutor's 
version of the task and test files (e.g., Task_1.py, Task_2.py, Testing_1.py, Dummy.py, Helper.py, etc.).''')

        self.Label12 = tk.Label(self.Frame1)
        self.Label12.place(relx=0.014, rely=0.832, height=42, width=681)
        self.Label12.configure(activebackground="#d9d9d9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(anchor='w')
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(compound='left')
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(font="-family {Segoe UI} -size 10")
        self.Label12.configure(foreground="black")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="#000000")
        self.Label12.configure(justify='left')
        self.Label12.configure(text='''3. Run Test: Once everything is ready, choose the desired tasks using the checkboxes and start the test process. 
When tests are completed, a message box will notify you, and a collated report will be generated automatically.''')

def start_up():
    automarker_gui_support.main()

if __name__ == '__main__':
    automarker_gui_support.main()




